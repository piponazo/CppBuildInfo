#pragma once

#include <QString>
#include <vector>
#include <memory>

struct CompilationProcess;

/// @brief Parses the file generated by the console application and extract information.
///
/// Obtain the information about all the CompilationProcess (es) that exists in the file generated by the
/// command line application.
class DataParser
{
public:
    DataParser();

    /// Destructor.
    ~DataParser();

    // --------------------------------------------------------------------------------------------

    /// @brief Gets CompilationProcess (es) parsed.
    const std::vector<CompilationProcess> getAllProcesses() const;

    /// @brief Gets the number of concurrent compilation processes.
    std::size_t getNConcurrentProcesses() const;

    /// @brief Gets the total time of the compilation [in msecs].
    std::size_t getTotalTime() const;

    // --------------------------------------------------------------------------------------------

    bool parse(const QString &path);

private:

    struct Pimpl;
    std::unique_ptr<Pimpl> _impl;
};
